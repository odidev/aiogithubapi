name: Actions

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v3

      - name: 🛠 Set up Python 3
        uses: actions/setup-python@v3
        id: python
        with:
          python-version: 3.x

      - name: 📦 Install dependencies
        run:  make requirements

      - name: 🖤 Lint with Black
        run:  make black-check

      - name: 🔤 Lint with isort
        run: make isort-check

  test:
    name: Test with Python ${{ matrix.python-version }}
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🛠️ Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install dependencies
        run: make requirements

      - name: 🏃 Run tests
        run: make test

      - name: 🛠 Build
        run: make build
        
  test_arm64: 
     runs-on: ubuntu-latest
     strategy:
      matrix:
        python-version: [ 3.8]
      fail-fast: false
     steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install and Run tests
        run: |
               docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
               arm64v8/ubuntu:20.04 \
               bash -exc 'apt-get update && apt-get -y install python3.8 curl git && \
                ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
                apt-get -y install software-properties-common && add-apt-repository ppa:deadsnakes/ppa && apt-get -y update && \
                apt install -y python3.8-venv && python3.8 -m venv venv38 && source venv38/bin/activate && \
                python3.8 -m pip install --upgrade pip && \
                python3.8 --version && \
                uname -m && \
                apt-get -y install make && \
                python3.8 -m pip install poetry && \
                poetry install && \
                make test && \
                deactivate'
                
  coverage:
    name: Coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🛠 Set up Python 3
        uses: actions/setup-python@v3
        id: python
        with:
          python-version: 3.x

      - name: 📦 Install dependencies
        run:  make requirements

      - name: 📤 Upload coverage to Codecov
        run: |
          make coverage
          curl -sfSL https://codecov.io/bash | bash -
